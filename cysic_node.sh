#!/bin/bash


CLR_SUCCESS='\033[1;32m'
CLR_INFO='\033[1;34m'
CLR_WARNING='\033[1;33m'
CLR_ERROR='\033[1;31m'
CLR_RESET='\033[0m' # No Color

function show_logo() {
    echo -e "${CLR_INFO}     –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Å–∫—Ä–∏–ø—Ç —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–æ–¥—ã Cysic     ${CLR_RESET}"
    curl -s https://raw.githubusercontent.com/profitnoders/Profit_Nodes/refs/heads/main/logo_new.sh | bash
}

function install_node() {
    echo -e "${CLR_INFO}–í–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å –≤–∞—à–µ–≥–æ EVM-–∫–æ—à–µ–ª—å–∫–∞:${CLR_RESET}"
    read -r EVM_ADDRESS

    if [[ -z "$EVM_ADDRESS" ]]; then
        echo -e "${CLR_ERROR}–û—à–∏–±–∫–∞: –∞–¥—Ä–µ—Å EVM-–∫–æ—à–µ–ª—å–∫–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º.${CLR_RESET}"
        exit 1
    fi

    echo -e "${CLR_WARNING}–ù–∞—á–∏–Ω–∞–µ—Ç—Å—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–æ–¥—ã Cysic —Å –∞–¥—Ä–µ—Å–æ–º: ${EVM_ADDRESS}${CLR_RESET}"
    curl -L https://github.com/cysic-labs/cysic-phase3/releases/download/v1.0.0/setup_linux.sh > ~/setup_linux.sh && bash ~/setup_linux.sh "$EVM_ADDRESS"

    if [[ $? -eq 0 ]]; then
        echo -e "${CLR_SUCCESS}–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!${CLR_RESET}"
    else
        echo -e "${CLR_ERROR}–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å —Å –æ—à–∏–±–∫–æ–π.${CLR_RESET}"
        exit 1
    fi
}

function restart_node() {
    echo -e "${CLR_WARNING}–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –Ω–æ–¥—ã Cysic...${CLR_RESET}"
    if [ -f "$HOME/cysic-verifier/start.sh" ]; then
        cd "$HOME/cysic-verifier" || exit
        bash start.sh
        echo -e "${CLR_SUCCESS}–ù–æ–¥–∞ –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω–∞.${CLR_RESET}"
    else
        echo -e "${CLR_ERROR}–§–∞–π–ª start.sh –Ω–µ –Ω–∞–π–¥–µ–Ω. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –Ω–æ–¥–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞.${CLR_RESET}"
    fi
}

function view_logs() {
    LOGFILE="$HOME/cysic-verifier/logs.txt"
    if [ -f "$LOGFILE" ]; then
        echo -e "${CLR_WARNING}–ü–æ–∫–∞–∑ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö 100 —Å—Ç—Ä–æ–∫ –ª–æ–≥–æ–≤:${CLR_RESET}"
        tail -n 100 "$LOGFILE"
    else
        echo -e "${CLR_ERROR}–§–∞–π–ª –ª–æ–≥–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω: $LOGFILE${CLR_RESET}"
    fi
}

function remove_node() {
    echo -e "${CLR_WARNING}–£–¥–∞–ª–µ–Ω–∏–µ –Ω–æ–¥—ã Cysic...${CLR_RESET}"

    if [ -d "$HOME/cysic-verifier" ]; then
        rm -rf "$HOME/cysic-verifier"
        echo -e "${CLR_SUCCESS}–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –Ω–æ–¥—ã Cysic —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞.${CLR_RESET}"
    else
        echo -e "${CLR_ERROR}–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –Ω–æ–¥—ã Cysic –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.${CLR_RESET}"
    fi

    if sudo systemctl is-active --quiet cysic; then
        sudo systemctl stop cysic
        sudo systemctl disable cysic
        sudo rm /etc/systemd/system/cysic.service
        sudo systemctl daemon-reload
        echo -e "${CLR_SUCCESS}–°–ª—É–∂–±–∞ Cysic —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞.${CLR_RESET}"
    fi

    echo -e "${CLR_SUCCESS}–ù–æ–¥–∞ Cysic —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞!${CLR_RESET}"
}

function show_menu() {
    show_logo
    echo -e "${CLR_INFO}1) üöÄ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–æ–¥—É${CLR_RESET}"
    echo -e "${CLR_INFO}2) üîÅ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –Ω–æ–¥—É${CLR_RESET}"
    echo -e "${CLR_INFO}3) üìÑ –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ª–æ–≥–∏ –Ω–æ–¥—ã${CLR_RESET}"
    echo -e "${CLR_INFO}4) üóëÔ∏è  –£–¥–∞–ª–∏—Ç—å –Ω–æ–¥—É${CLR_RESET}"
    echo -e "${CLR_INFO}5) ‚ùå –í—ã–π—Ç–∏${CLR_RESET}"
    echo -e "${CLR_INFO}–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –¥–µ–π—Å—Ç–≤–∏—è:${CLR_RESET}"
    read -p "–í—ã–±–æ—Ä: " choice

    case $choice in
        1) install_node ;;
        2) restart_node ;;
        3) view_logs ;;
        4) remove_node ;;
        5)
            echo -e "${CLR_SUCCESS}–í—ã—Ö–æ–¥...${CLR_RESET}"
            exit 0
            ;;
        *) 
            echo -e "${CLR_ERROR}–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –∏–∑ –º–µ–Ω—é.${CLR_RESET}"
            show_menu
            ;;
    esac
}

# –ó–∞–ø—É—Å–∫ –º–µ–Ω—é
show_menu
