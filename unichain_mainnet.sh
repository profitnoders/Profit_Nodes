#!/bin/bash

# –¶–≤–µ—Ç–∞
CLR_SUCCESS='\033[1;32m'
CLR_INFO='\033[1;34m'
CLR_WARNING='\033[1;33m'
CLR_ERROR='\033[1;31m'
CLR_RESET='\033[0m'

NODE_DIR="$HOME/unichain-node"
function show_logo() {
    echo -e "${CLR_INFO}     –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Å–∫—Ä–∏–ø—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–æ–¥–æ–π Unichain mainnet     ${CLR_RESET}"
    curl -s https://raw.githubusercontent.com/profitnoders/Profit_Nodes/refs/heads/main/logo_new.sh | bash
}

function install_node() {
    sudo apt update && sudo apt upgrade -y
    echo -e "${CLR_INFO}‚ñ∂ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker –∏ Docker Compose...${CLR_RESET}"
    sudo apt update && sudo apt install docker.io -y
    sudo curl -L "https://github.com/docker/compose/releases/download/v2.20.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
    sudo chmod +x /usr/local/bin/docker-compose

    echo -e "${CLR_INFO}‚ñ∂ –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è Unichain...${CLR_RESET}"
    git clone https://github.com/Uniswap/unichain-node $NODE_DIR

    echo -e "${CLR_INFO}‚ñ∂ –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é mainnet –≤ docker-compose.yml...${CLR_RESET}"
    sed -i 's|# \s*\.env\.mainnet|        - .env.mainnet|' "$NODE_DIR/docker-compose.yml"
    echo -e "${CLR_SUCCESS}‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.${CLR_RESET}"
}

function start_node() {
    echo -e "${CLR_INFO}‚ñ∂ –ó–∞–ø—É—Å–∫ –Ω–æ–¥—ã...${CLR_RESET}"
    docker-compose -f "$NODE_DIR/docker-compose.yml" up -d
    echo -e "${CLR_SUCCESS}‚úÖ –ù–æ–¥–∞ –∑–∞–ø—É—â–µ–Ω–∞.${CLR_RESET}"
}

function restart_node() {
    echo -e "${CLR_INFO}‚ñ∂ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –Ω–æ–¥—ã...${CLR_RESET}"
    docker-compose -f "$NODE_DIR/docker-compose.yml" down
    docker-compose -f "$NODE_DIR/docker-compose.yml" up -d
    echo -e "${CLR_SUCCESS}‚úÖ –ù–æ–¥–∞ –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω–∞.${CLR_RESET}"
}

function change_ports() {
    echo -e "${CLR_INFO}‚ñ∂ –ò–∑–º–µ–Ω–µ–Ω–∏–µ –ø–æ—Ä—Ç–æ–≤ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –∫–æ–Ω—Ñ–ª–∏–∫—Ç–∞...${CLR_RESET}"
    sed -i 's|30303:30303|31313:31313|' "$NODE_DIR/docker-compose.yml"
    sed -i 's|8545:8545|8647:8647|' "$NODE_DIR/docker-compose.yml"
    sed -i 's|8546:8546|8646:8646|' "$NODE_DIR/docker-compose.yml"
    sed -i 's|8551|8651|' "$NODE_DIR/.env.mainnet"
    sed -i 's|9222:9222|9332:9332|' "$NODE_DIR/docker-compose.yml"
    sed -i 's|9545:9545|9645:9645|' "$NODE_DIR/docker-compose.yml"
    echo -e "${CLR_SUCCESS}‚úÖ –ü–æ—Ä—Ç—ã —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω—ã.${CLR_RESET}"
}

function logs_node() {
    echo -e "${CLR_INFO}‚ñ∂ –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤...${CLR_RESET}"
    docker-compose -f "$NODE_DIR/docker-compose.yml" logs -f
}

function remove_node() {
    echo -e "${CLR_WARNING}‚ö† –í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –Ω–æ–¥—É Unichain? (y/n)${CLR_RESET}"
    read -p "–í–∞—à –≤—ã–±–æ—Ä: " confirm
    if [[ "$confirm" == "y" || "$confirm" == "Y" ]]; then
        docker-compose -f "$NODE_DIR/docker-compose.yml" down -v
        rm -rf "$NODE_DIR"
        rm unichain_mainnet.sh
        echo -e "${CLR_SUCCESS}‚úÖ –ù–æ–¥–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é —É–¥–∞–ª–µ–Ω–∞.${CLR_RESET}"
    else
        echo -e "${CLR_INFO}–£–¥–∞–ª–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ.${CLR_RESET}"
    fi
}

function show_menu() {
    show_logo
    echo -e "${CLR_INFO}–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:${CLR_RESET}"
    echo -e "${CLR_SUCCESS}1) üöÄ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–æ–¥—É${CLR_RESET}"
    echo -e "${CLR_SUCCESS}2) ‚ñ∂ –ó–∞–ø—É—Å—Ç–∏—Ç—å –Ω–æ–¥—É${CLR_RESET}"
    echo -e "${CLR_SUCCESS}3) üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –Ω–æ–¥—É${CLR_RESET}"
    echo -e "${CLR_SUCCESS}4) üõ† –ò–∑–º–µ–Ω–∏—Ç—å –ø–æ—Ä—Ç—ã${CLR_RESET}"
    echo -e "${CLR_SUCCESS}5) üìú –õ–æ–≥–∏ –Ω–æ–¥—ã${CLR_RESET}"
    echo -e "${CLR_WARNING}6) üóë –£–¥–∞–ª–∏—Ç—å –Ω–æ–¥—É${CLR_RESET}"
    echo -e "${CLR_ERROR}7) ‚ùå –í—ã—Ö–æ–¥${CLR_RESET}"
    read -p "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –¥–µ–π—Å—Ç–≤–∏—è: " choice
    case $choice in
        1) install_node ;;
        2) start_node ;;
        3) restart_node ;;
        4) change_ports ;;
        5) logs_node ;;
        6) remove_node ;;
        7) echo -e "${CLR_ERROR}–í—ã—Ö–æ–¥...${CLR_RESET}" && exit 0 ;;
        *) echo -e "${CLR_WARNING}–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä.${CLR_RESET}" ;;
    esac
}


show_menu

