#!/bin/bash

# –¶–≤–µ—Ç–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è
CLR_SUCCESS='\033[1;32m'  # –ó–µ–ª–µ–Ω—ã–π
CLR_INFO='\033[1;34m'  # –°–∏–Ω–∏–π
CLR_WARNING='\033[1;33m'  # –ñ–µ–ª—Ç—ã–π
CLR_ERROR='\033[1;31m'  # –ö—Ä–∞—Å–Ω—ã–π
CLR_RESET='\033[0m'  # –°–±—Ä–æ—Å —Ü–≤–µ—Ç–∞

# –§—É–Ω–∫—Ü–∏—è –≤—ã–≤–æ–¥–∞ –ª–æ–≥–æ—Ç–∏–ø–∞
function show_logo() {
    echo -e "${CLR_INFO}     –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Å–∫—Ä–∏–ø—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–æ–¥–æ–π t3rn v.2    ${CLR_RESET}"
    curl -s https://raw.githubusercontent.com/profitnoders/Profit_Nodes/refs/heads/main/logo_new.sh | bash
}

# –§—É–Ω–∫—Ü–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–æ–¥—ã
function install_node() {
    echo -e "${CLR_INFO}‚ñ∂ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...${CLR_RESET}"
    sudo apt update && sudo apt upgrade -y
    sudo apt install -y screen wget curl tar

    echo -e "${CLR_INFO}‚ñ∂ –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ t3rn...${CLR_RESET}"
    mkdir -p $HOME/t3rn && cd $HOME/t3rn

    echo -e "${CLR_INFO}‚ñ∂ –ó–∞–≥—Ä—É–∑–∫–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–π –≤–µ—Ä—Å–∏–∏ executor...${CLR_RESET}"
    LATEST_VERSION=$(curl -s https://api.github.com/repos/t3rn/executor-release/releases/latest | grep -Po '"tag_name": "\K.*?(?=")')
    wget https://github.com/t3rn/executor-release/releases/download/${LATEST_VERSION}/executor-linux-${LATEST_VERSION}.tar.gz

    echo -e "${CLR_INFO}‚ñ∂ –†–∞—Å–ø–∞–∫–æ–≤–∫–∞ executor...${CLR_RESET}"
    tar -xzf executor-linux-*.tar.gz
    cd executor/executor/bin

    echo -e "${CLR_INFO}‚ñ∂ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è...${CLR_RESET}"
    echo "export ENVIRONMENT=testnet" >> ~/.bashrc
    echo "export LOG_LEVEL=debug" >> ~/.bashrc
    echo "export LOG_PRETTY=false" >> ~/.bashrc
    echo "export EXECUTOR_PROCESS_BIDS_ENABLED=true" >> ~/.bashrc
    echo "export EXECUTOR_PROCESS_ORDERS_ENABLED=true" >> ~/.bashrc
    echo "export EXECUTOR_PROCESS_CLAIMS_ENABLED=true" >> ~/.bashrc
    echo "export EXECUTOR_MAX_L3_GAS_PRICE=100" >> ~/.bashrc

    read -p "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à PRIVATE_KEY_LOCAL: " private_key
    echo "export PRIVATE_KEY_LOCAL=${private_key}" >> ~/.bashrc

    echo "–í–≤–µ–¥–∏—Ç–µ —Å–ø–∏—Å–æ–∫ —Å–µ—Ç–µ–π —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: arbitrum-sepolia,base-sepolia,optimism-sepolia,l2rn):"
    read -p "ENABLED_NETWORKS: " enabled_networks
    enabled_networks=${enabled_networks:-"arbitrum-sepolia,base-sepolia,optimism-sepolia,l2rn"}
    echo "export ENABLED_NETWORKS='${enabled_networks}'" >> ~/.bashrc

    echo "–í–≤–µ–¥–∏—Ç–µ RPC-—ç–Ω–¥–ø–æ–∏–Ω—Ç—ã –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –∑–Ω–∞—á–µ–Ω–∏–π –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é:"
    read -p "RPC_ENDPOINTS: " rpc_endpoints
    rpc_endpoints=${rpc_endpoints:-'{
        "l2rn": ["https://b2n.rpc.caldera.xyz/http"],
        "arbt": ["https://arbitrum-sepolia.drpc.org", "https://sepolia-rollup.arbitrum.io/rpc"],
        "bast": ["https://base-sepolia-rpc.publicnode.com", "https://base-sepolia.drpc.org"],
        "opst": ["https://sepolia.optimism.io", "https://optimism-sepolia.drpc.org"],
        "unit": ["https://unichain-sepolia.drpc.org", "https://sepolia.unichain.org"]
    }'}
    echo "export RPC_ENDPOINTS='${rpc_endpoints}'" >> ~/.bashrc
    echo "export EXECUTOR_PROCESS_PENDING_ORDERS_FROM_API=true" >> ~/.bashrc
    source ~/.bashrc

    echo -e "${CLR_SUCCESS}‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å –Ω–æ–¥—É.${CLR_RESET}"
}

# –§—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –Ω–æ–¥—ã
function start_node() {
    echo -e "${CLR_INFO}‚ñ∂ –ó–∞–ø—É—Å–∫ t3rn-executor –≤ screen-—Å–µ—Å—Å–∏–∏...${CLR_RESET}"
    screen -dmS t3rn-executor bash -c "$HOME/t3rn/executor/executor/bin/executor"
    echo -e "${CLR_SUCCESS}‚úÖ –ù–æ–¥–∞ –∑–∞–ø—É—â–µ–Ω–∞ –≤ screen-—Å–µ—Å—Å–∏–∏ 't3rn-executor'!${CLR_RESET}"
    echo -e "${CLR_INFO}‚ñ∂ –ß—Ç–æ–±—ã –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: screen -r t3rn-executor${CLR_RESET}"
    echo -e "${CLR_INFO}‚ñ∂ –ß—Ç–æ–±—ã –æ—Ç—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è, –Ω–∞–∂–º–∏—Ç–µ: Ctrl + A, –∑–∞—Ç–µ–º D${CLR_RESET}"
}

# –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –Ω–æ–¥—ã
function restart_node() {
    echo -e "${CLR_INFO}‚ñ∂ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ t3rn-executor...${CLR_RESET}"
    screen -S t3rn-executor -X quit
    start_node
    echo -e "${CLR_SUCCESS}‚úÖ –ù–æ–¥–∞ —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω–∞!${CLR_RESET}"
}

# –§—É–Ω–∫—Ü–∏—è —É–¥–∞–ª–µ–Ω–∏—è –Ω–æ–¥—ã (—Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º)
function remove_node() {
    echo -e "${CLR_WARNING}‚ö† –í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –Ω–æ–¥—É t3rn-executor? (y/n)${CLR_RESET}"
    read -p "–í–≤–µ–¥–∏—Ç–µ y –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∏–ª–∏ n –¥–ª—è –æ—Ç–º–µ–Ω—ã: " confirmation
    if [[ $confirmation == "y" || $confirmation == "Y" ]]; then
        echo -e "${CLR_INFO}‚ñ∂ –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ —É–¥–∞–ª–µ–Ω–∏–µ –Ω–æ–¥—ã...${CLR_RESET}"
        screen -S t3rn-executor -X quit
        rm -rf $HOME/t3rn
        sed -i '/EXECUTOR_PROCESS_BIDS_ENABLED/d' ~/.bashrc
        sed -i '/EXECUTOR_PROCESS_ORDERS_ENABLED/d' ~/.bashrc
        sed -i '/EXECUTOR_PROCESS_CLAIMS_ENABLED/d' ~/.bashrc
        sed -i '/EXECUTOR_MAX_L3_GAS_PRICE/d' ~/.bashrc
        sed -i '/PRIVATE_KEY_LOCAL/d' ~/.bashrc
        sed -i '/ENABLED_NETWORKS/d' ~/.bashrc
        sed -i '/RPC_ENDPOINTS/d' ~/.bashrc
        sed -i '/EXECUTOR_PROCESS_PENDING_ORDERS_FROM_API/d' ~/.bashrc
        source ~/.bashrc
        echo -e "${CLR_SUCCESS}‚úÖ –ù–æ–¥–∞ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞.${CLR_RESET}"
    else
        echo -e "${CLR_INFO}‚ñ∂ –£–¥–∞–ª–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ.${CLR_RESET}"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –≤—ã–≤–æ–¥–∞ –º–µ–Ω—é
function show_menu() {
    show_logo
    echo -e "${CLR_INFO}–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:${CLR_RESET}"
    echo -e "${CLR_SUCCESS}1) üöÄ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–æ–¥—É${CLR_RESET}"
    echo -e "${CLR_SUCCESS}2) ‚ñ∂ –ó–∞–ø—É—Å—Ç–∏—Ç—å –Ω–æ–¥—É${CLR_RESET}"
    echo -e "${CLR_SUCCESS}3) üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –Ω–æ–¥—É${CLR_RESET}"
    echo -e "${CLR_WARNING}4) üóë –£–¥–∞–ª–∏—Ç—å –Ω–æ–¥—É${CLR_RESET}"
    echo -e "${CLR_ERROR}5) ‚ùå –í—ã–π—Ç–∏${CLR_RESET}"
    
    read -p "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –¥–µ–π—Å—Ç–≤–∏—è: " choice

    case $choice in
        1) install_node ;;
        2) start_node ;;
        3) restart_node ;;
        4) remove_node ;;
        5) echo -e "${CLR_ERROR}–í—ã—Ö–æ–¥...${CLR_RESET}" ;;
        *) echo -e "${CLR_WARNING}–ù–µ–≤–µ—Ä–Ω—ã–π –≤–≤–æ–¥, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.${CLR_RESET}" ;;
    esac
}

# –ó–∞–ø—É—Å–∫ –º–µ–Ω—é
show_menu
