#!/bin/bash

# –¶–≤–µ—Ç–æ–≤—ã–µ –æ–±–æ–∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[0;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m' # –°–±—Ä–æ—Å —Ü–≤–µ—Ç–∞

# –§—É–Ω–∫—Ü–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ª–æ–≥–æ—Ç–∏–ø–∞
function show_logo() {
    echo -e "${GREEN}==========================================================${NC}"
    echo -e "${CYAN}        –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Å–∫—Ä–∏–ø—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–æ–¥–æ–π Waku        ${NC}"
    echo -e "${GREEN}==========================================================${NC}"
    curl -s https://raw.githubusercontent.com/profitnoders/Profit_Nodes/refs/heads/main/logo_new.sh | bash
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ curl, –µ—Å–ª–∏ –æ–Ω –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç
if ! command -v curl &> /dev/null; then
    echo -e "${YELLOW}–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º curl...${NC}"
    sudo apt update
    sudo apt install curl -y
fi

# –§—É–Ω–∫—Ü–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–∞–∫–µ—Ç–æ–≤
function install_dependencies() {
    echo -e "${BLUE}–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏...${NC}"
    sudo apt update -y
    sudo apt upgrade -y
    sudo apt install -y curl iptables build-essential git wget jq make gcc nano tmux htop \
        nvme-cli pkg-config libssl-dev libleveldb-dev tar clang bsdmainutils ncdu unzip
}

# –§—É–Ω–∫—Ü–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Docker –∏ Docker Compose
function install_docker() {
    echo -e "${BLUE}–ü—Ä–æ–≤–µ—Ä—è–µ–º Docker...${NC}"
    if ! command -v docker &> /dev/null; then
        curl -fsSL https://get.docker.com | sh
    fi

    echo -e "${BLUE}–ü—Ä–æ–≤–µ—Ä—è–µ–º Docker Compose...${NC}"
    if ! command -v docker-compose &> /dev/null; then
        echo -e "${YELLOW}–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Docker Compose...${NC}"
        sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose
    fi
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–æ–¥—ã Waku
function install_node() {
    install_dependencies
    install_docker

    cd $HOME
    git clone https://github.com/waku-org/nwaku-compose
    cd nwaku-compose
    cp .env.example .env

    echo -e "${YELLOW}–í—Å—Ç–∞–≤—å—Ç–µ –≤–∞—à RPC –¥–ª—è Ethereum Sepolia:${NC}"
    read RPC_URL
    echo -e "${YELLOW}–í–∞—à –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á –æ—Ç EVM –∫–æ—à–µ–ª—å–∫–∞:${NC}"
    read ETH_KEY
    echo -e "${YELLOW}–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–∞—Ä–æ–ª—å –¥–ª—è RLN Membership:${NC}"
    read RLN_PASSWORD

    sed -i "s|RLN_RELAY_ETH_CLIENT_ADDRESS=.*|RLN_RELAY_ETH_CLIENT_ADDRESS=$RPC_URL|" .env
    sed -i "s|ETH_TESTNET_KEY=.*|ETH_TESTNET_KEY=$ETH_KEY|" .env
    sed -i "s|RLN_RELAY_CRED_PASSWORD=.*|RLN_RELAY_CRED_PASSWORD=$RLN_PASSWORD|" .env

    ./register_rln.sh

    echo -e "${BLUE}–ó–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã Waku...${NC}"
    docker-compose up -d

}

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–æ–¥—ã Waku
function update_node() {
    cd $HOME/nwaku-compose
    docker-compose down
    sudo rm -r keystore rln_tree
    git pull origin master
    ./register_rln.sh
    docker-compose up -d

    echo -e "${GREEN}–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!${NC}"
}

# –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤ –Ω–æ–¥—ã
function view_logs() {
    echo -e "${BLUE}–ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤ –Ω–æ–¥—ã Waku...${NC}"
    cd $HOME/nwaku-compose
    docker-compose logs -f
}

# –£–¥–∞–ª–µ–Ω–∏–µ –Ω–æ–¥—ã Waku
function remove_node() {
    echo -e "${BLUE}–£–¥–∞–ª—è–µ–º –Ω–æ–¥—É Waku...${NC}"
    cd $HOME/nwaku-compose
    docker-compose down
    cd $HOME
    rm -rf nwaku-compose
    echo -e "${GREEN}–ù–æ–¥–∞ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞!${NC}"
}

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
function show_menu() {
    show_logo
    echo -e "${CYAN}1) üöÄ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–æ–¥—É${NC}"
    echo -e "${CYAN}2) üîÑ –û–±–Ω–æ–≤–∏—Ç—å –Ω–æ–¥—É${NC}"
    echo -e "${CYAN}3) üìú –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤${NC}"
    echo -e "${CYAN}4) üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –Ω–æ–¥—É${NC}"
    echo -e "${CYAN}5) ‚ùå –í—ã–π—Ç–∏${NC}"

    echo -e "${YELLOW}–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:${NC}"
    read choice

    case $choice in
        1) install_node ;;
        2) update_node ;;
        3) view_logs ;;
        4) remove_node ;;
        5) echo -e "${GREEN}–í—ã—Ö–æ–¥...${NC}" && exit 0 ;;
        *) echo -e "${RED}–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.${NC}" && show_menu ;;
    esac
}

# –ó–∞–ø—É—Å–∫ –º–µ–Ω—é
show_menu
