#!/bin/bash

# –§—É–Ω–∫—Ü–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ª–æ–≥–æ—Ç–∏–ø–∞
function show_logo() {
    echo -e "\033[1;97;44m        –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Å–∫—Ä–∏–ø—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–æ–¥–æ–π Waku        \033[0m"
    curl -s https://raw.githubusercontent.com/profitnoders/Profit_Nodes/refs/heads/main/logo_new.sh | bash
}

# –§—É–Ω–∫—Ü–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–∞–∫–µ—Ç–æ–≤
function install_dependencies() {
    sudo apt update -y
    sudo apt upgrade -y
    sudo apt install -y curl iptables build-essential git wget jq make gcc nano tmux htop \
        nvme-cli pkg-config libssl-dev libleveldb-dev tar clang bsdmainutils ncdu unzip
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ curl, –µ—Å–ª–∏ –æ–Ω –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç
    if ! command -v curl &> /dev/null; then
        sudo apt update
        sudo apt install curl -y
    fi
    if ! command -v docker &> /dev/null; then
        curl -fsSL https://get.docker.com | sh
    fi

    if ! command -v docker-compose &> /dev/null; then
        sudo apt update && sudo apt install -y docker-compose
        command -v docker-compose &> /dev/null && echo -e "\033[1;30;42mDocker Compose —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!\033[0m" || { echo -e "\033[1;31;40m–û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏.\033[0m"; exit 1; }
    fi  # –ó–∞–∫—Ä—ã–≤–∞—é—â–∏–π fi –¥–ª—è –≤—Ç–æ—Ä–æ–≥–æ if
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–æ–¥—ã Waku
function install_node() {
    install_dependencies
    install_docker

    cd $HOME
    git clone https://github.com/waku-org/nwaku-compose
    cd nwaku-compose
    cp .env.example .env

    echo -e "\033[0;36;43m–í—Å—Ç–∞–≤—å—Ç–µ –≤–∞—à RPC Sepolia ETH:\033[0m"
    read RPC
    echo -e "\033[0;36;43m–í—Å—Ç–∞–≤—å—Ç–µ –≤–∞—à –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á –æ—Ç EVM –∫–æ—à–µ–ª—å–∫–∞, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–º –µ—Å—Ç—å Sepolia ETH:\033[0m"
    read PRIVATE_KEY
    echo -e "\033[0;36;43m–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–∞—Ä–æ–ª—å:\033[0m"
    read PASSWORD

    sed -i "s|RLN_RELAY_ETH_CLIENT_ADDRESS=.*|RLN_RELAY_ETH_CLIENT_ADDRESS=$RPC|" .env
    sed -i "s|ETH_TESTNET_KEY=.*|ETH_TESTNET_KEY=$PRIVATE_KEY|" .env
    sed -i "s|RLN_RELAY_CRED_PASSWORD=.*|RLN_RELAY_CRED_PASSWORD=$PASSWORD|" .env

    ./register_rln.sh

    docker-compose up -d
}

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–æ–¥—ã Waku
function update_node() {
    cd $HOME/nwaku-compose
    docker-compose down
    sudo rm -r keystore rln_tree
    git pull origin master
    ./register_rln.sh
    docker compose pull
    docker-compose up -d

    echo -e "\033[1;30;42m–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!\033[0m"
}

# –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤ –Ω–æ–¥—ã
function view_logs() {
    echo -e "\033[1;97;44m–ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤ –Ω–æ–¥—ã Waku...\033[0m"
    cd $HOME/nwaku-compose && docker-compose logs -f
}

# –£–¥–∞–ª–µ–Ω–∏–µ –Ω–æ–¥—ã Waku
function remove_node() {
    cd $HOME/nwaku-compose
    docker-compose down
    cd $HOME
    rm -rf nwaku-compose
    rm -rf waku_node.sh
    echo -e "\033[1;30;42m–ù–æ–¥–∞ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞!\033[0m"
}

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
function show_menu() {
    show_logo
    echo -e "\033[0;32m 1) üöÄ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–æ–¥—É\033[0m"
    echo -e "\033[0;32m 2) üìú –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤\033[0m"
    echo -e "\033[0;32m 3) üîÑ –û–±–Ω–æ–≤–∏—Ç—å –Ω–æ–¥—É\033[0m"
    echo -e "\033[0;32m 4) üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –Ω–æ–¥—É\033[0m"
    echo -e "\033[0;32m 5) ‚ùå –í—ã–π—Ç–∏\033[0m"

    echo -e "\033[1;37;41m–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:\033[0m"
    read choice

    case $choice in
        1) install_node ;;
        2) view_logs ;;
        3) update_node ;;
        4) remove_node ;;
        5) echo -e "\033[1;30;42m–í—ã—Ö–æ–¥...\033[0m" && exit 0 ;;
        *) echo -e "\033[1;31;40m–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.\033[0m" && show_menu ;;
    esac
}

# –ó–∞–ø—É—Å–∫ –º–µ–Ω—é
show_menu
