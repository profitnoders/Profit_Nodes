#!/bin/bash

# –û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞: —Ü–≤–µ—Ç–∞ –∏ —Ñ–æ–Ω—ã
CLR_INFO='\033[1;97;44m'  # –ë–µ–ª—ã–π —Ç–µ–∫—Å—Ç –Ω–∞ —Å–∏–Ω–µ–º —Ñ–æ–Ω–µ
CLR_SUCCESS='\033[1;30;42m'  # –ó–µ–ª–µ–Ω—ã–π —Ç–µ–∫—Å—Ç –Ω–∞ —á–µ—Ä–Ω–æ–º —Ñ–æ–Ω–µ
CLR_WARNING='\033[1;37;41m'  # –ë–µ–ª—ã–π —Ç–µ–∫—Å—Ç –Ω–∞ –∫—Ä–∞—Å–Ω–æ–º —Ñ–æ–Ω–µ
CLR_ERROR='\033[1;31;40m'  # –ö—Ä–∞—Å–Ω—ã–π —Ç–µ–∫—Å—Ç –Ω–∞ —á–µ—Ä–Ω–æ–º —Ñ–æ–Ω–µ
CLR_RESET='\033[0m'  # –°–±—Ä–æ—Å —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
CLR_GREEN='\033[0;32m' # –ó–µ–ª–µ–Ω—ã–π —Ç–µ–∫—Å—Ç

# –§—É–Ω–∫—Ü–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ª–æ–≥–æ—Ç–∏–ø–∞
function show_logo() {
    echo -e "${CLR_INFO}     –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Å–∫—Ä–∏–ø—Ç —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–æ–¥—ã Titan      ${CLR_RESET}"
    curl -s https://raw.githubusercontent.com/profitnoders/Profit_Nodes/refs/heads/main/logo_new.sh | bash
}

# –§—É–Ω–∫—Ü–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–∞–∫–µ—Ç–æ–≤
function install_dependencies() {
    sudo apt update -y && sudo apt upgrade -y
    sudo apt install -y curl wget git docker.io
}

# –§—É–Ω–∫—Ü–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Docker
function install_docker() {
    echo -e "${CLR_INFO}–ü—Ä–æ–≤–µ—Ä—è–µ–º Docker...${CLR_RESET}"
    if ! command -v docker &> /dev/null; then
        echo -e "${CLR_WARNING}Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Docker...${CLR_RESET}"
        sudo apt install docker.io -y
    else
        echo -e "${CLR_SUCCESS}Docker —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!${CLR_RESET}"
    fi
}

# –§—É–Ω–∫—Ü–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–æ–¥—ã Titan
function install_node() {
    install_dependencies
    install_docker

    echo -e "${CLR_INFO}–£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ –Ω–æ–¥—ã...${CLR_RESET}"
    rm -rf ~/.titanedge

    echo -e "${CLR_INFO}–°–∫–∞—á–∏–≤–∞–µ–º Docker-–æ–±—Ä–∞–∑ –Ω–æ–¥—ã Titan...${CLR_RESET}"
    docker pull nezha123/titan-edge

    echo -e "${CLR_INFO}–°–æ–∑–¥–∞–µ–º —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –¥–ª—è –Ω–æ–¥—ã...${CLR_RESET}"
    mkdir -p ~/.titanedge

    echo -e "${CLR_INFO}–ó–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä Titan...${CLR_RESET}"
    docker run --network=host -d -v ~/.titanedge:/root/.titanedge nezha123/titan-edge

    echo -e "${CLR_SUCCESS}‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –ù–æ–¥–∞ –∑–∞–ø—É—â–µ–Ω–∞.${CLR_RESET}"
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–∏–≤—è–∑–∫–∏ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–∞
function bind_identity() {
    echo -e "${CLR_WARNING}–í–≤–µ–¥–∏—Ç–µ –≤–∞—à Identity Code:${CLR_RESET}"
    read -r IDENTITY_CODE

    echo -e "${CLR_INFO}–ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º –≤–∞—à –∫–æ–¥...${CLR_RESET}"
    docker run --rm -it -v ~/.titanedge:/root/.titanedge nezha123/titan-edge bind --hash="$IDENTITY_CODE" https://api-test1.container1.titannet.io/api/v2/device/binding

    echo -e "${CLR_SUCCESS}‚úÖ –ù–æ–¥–∞ —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–≤—è–∑–∞–Ω–∞!${CLR_RESET}"
}

# –§—É–Ω–∫—Ü–∏—è —É–¥–∞–ª–µ–Ω–∏—è –Ω–æ–¥—ã
function remove_node() {
    echo -e "${CLR_ERROR}–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏ —É–¥–∞–ª—è–µ–º –Ω–æ–¥—É Titan...${CLR_RESET}"
    docker stop $(docker ps -q --filter ancestor=nezha123/titan-edge) 2>/dev/null
    docker rm $(docker ps -aq --filter ancestor=nezha123/titan-edge) 2>/dev/null
    rm -rf ~/.titanedge
    echo -e "${CLR_SUCCESS}‚úÖ –ù–æ–¥–∞ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞!${CLR_RESET}"
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ª–æ–≥–æ–≤
function check_logs() {
    echo -e "${CLR_INFO}–ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤ –Ω–æ–¥—ã Titan...${CLR_RESET}"
    docker logs --tail 100 -f $(docker ps -q --filter ancestor=nezha123/titan-edge)
}

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
function show_menu() {
    show_logo
    echo -e "${CLR_INFO}–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:${CLR_RESET}"
    echo -e "${CLR_GREEN}1) üöÄ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–æ–¥—É${CLR_RESET}"
    echo -e "${CLR_GREEN}2) üîó –ü—Ä–∏–≤—è–∑–∞—Ç—å Identity Code${CLR_RESET}"
    echo -e "${CLR_GREEN}3) üìú –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤${CLR_RESET}"
    echo -e "${CLR_ERROR}4) üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –Ω–æ–¥—É${CLR_RESET}"
    echo -e "${CLR_GREEN}5) ‚ùå –í—ã–π—Ç–∏${CLR_RESET}"
    
    read -p "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –¥–µ–π—Å—Ç–≤–∏—è: " choice

    case $choice in
        1) install_node ;;
        2) bind_identity ;;
        3) check_logs ;;
        4) remove_node ;;
        5) echo -e "${CLR_SUCCESS}–í—ã—Ö–æ–¥...${CLR_RESET}" && exit 0 ;;
        *) echo -e "${CLR_ERROR}–û—à–∏–±–∫–∞: –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.${CLR_RESET}" && show_menu ;;
    esac
}

# –ó–∞–ø—É—Å–∫ –º–µ–Ω—é
show_menu
