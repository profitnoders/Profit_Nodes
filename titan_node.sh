#!/bin/bash

# –û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞: —Ü–≤–µ—Ç–∞ –∏ —Ñ–æ–Ω—ã
CLR_INFO='\033[1;97;44m'  # –ë–µ–ª—ã–π —Ç–µ–∫—Å—Ç –Ω–∞ —Å–∏–Ω–µ–º —Ñ–æ–Ω–µ
CLR_SUCCESS='\033[1;97;42m'  # –ë–µ–ª—ã–π —Ç–µ–∫—Å—Ç –Ω–∞ –∑–µ–ª–µ–Ω–æ–º —Ñ–æ–Ω–µ
CLR_WARNING='\033[1;30;103m'  # –ß–µ—Ä–Ω—ã–π —Ç–µ–∫—Å—Ç –Ω–∞ –∂–µ–ª—Ç–æ–º —Ñ–æ–Ω–µ
CLR_ERROR='\033[1;97;41m'  # –ë–µ–ª—ã–π —Ç–µ–∫—Å—Ç –Ω–∞ –∫—Ä–∞—Å–Ω–æ–º —Ñ–æ–Ω–µ
CLR_RESET='\033[0m'  # –°–±—Ä–æ—Å —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –±–∞–Ω–Ω–µ—Ä–∞
function show_logo() {
    echo -e "${CLR_SUCCESS}**********************************************************${CLR_RESET}"
    echo -e "${CLR_INFO}          –£—Å—Ç–∞–Ω–æ–≤–æ—á–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è Titan Network           ${CLR_RESET}"
    echo -e "${CLR_SUCCESS}**********************************************************${CLR_RESET}"
    curl -s https://raw.githubusercontent.com/profitnoders/Profit_Nodes/refs/heads/main/logo_new.sh | bash
}

# –§—É–Ω–∫—Ü–∏—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è: —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–∞–∫–µ—Ç–æ–≤ –∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
function install_dependencies() {
    echo -e "${CLR_WARNING}üîÑ –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏...${CLR_RESET}"
    sudo apt update -y
    sudo apt install -y curl git jq lz4 build-essential unzip docker.io
    sudo systemctl enable docker
    sudo systemctl start docker
}

# –§—É–Ω–∫—Ü–∏—è —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è —É–∑–ª–∞ Titan Network
function install_node() {
    echo -e "${CLR_INFO}üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Titan Network...${CLR_RESET}"
    
    INSTALL_DIR="$HOME/titan-network"
    CONFIG_FILE="$INSTALL_DIR/titan.env"
    
    mkdir -p "$INSTALL_DIR"
    cd "$INSTALL_DIR" || exit
    
    echo -e "${CLR_WARNING}üîë –í–≤–µ–¥–∏—Ç–µ –≤–∞—à –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–æ–Ω–Ω—ã–π –∫–æ–¥ Titan:${CLR_RESET}"
    read -r IDENTITY_CODE
    
    echo "TITAN_IDENTITY_CODE=$IDENTITY_CODE" > "$CONFIG_FILE"
    
    docker pull nezha123/titan-edge
    docker run --name titan --network=host -d -v ~/.titanedge:/root/.titanedge --env-file "$CONFIG_FILE" nezha123/titan-edge
    
    echo -e "${CLR_SUCCESS}‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –£–∑–µ–ª —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω.${CLR_RESET}"
}

# –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ü–û —É–∑–ª–∞ Titan
function update_node() {
    echo -e "${CLR_INFO}üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–æ–¥—ã Titan Network...${CLR_RESET}"
    
    docker stop titan
    docker rm titan
    docker pull nezha123/titan-edge
    docker run --name titan --network=host -d -v ~/.titanedge:/root/.titanedge --env-file "$HOME/titan-network/titan.env" nezha123/titan-edge
    
    echo -e "${CLR_SUCCESS}‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!${CLR_RESET}"
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∂—É—Ä–Ω–∞–ª–∞ —Ä–∞–±–æ—Ç—ã —É–∑–ª–∞
function view_logs() {
    echo -e "${CLR_INFO}üìú –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ª–æ–≥–æ–≤ —É–∑–ª–∞...${CLR_RESET}"
    docker logs -f titan
}

# –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–∞ –Ω–æ–¥—ã
function restart_node() {
    echo -e "${CLR_WARNING}üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º –Ω–æ–¥—É Titan...${CLR_RESET}"
    docker restart titan
    sleep 2
    docker logs -f titan
}

# –§—É–Ω–∫—Ü–∏—è —É–¥–∞–ª–µ–Ω–∏—è —É–∑–ª–∞ –∏ –≤—Å–µ—Ö —Å–≤—è–∑–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
function remove_node() {
    echo -e "${CLR_ERROR}‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: –£–¥–∞–ª–µ–Ω–∏–µ —É–∑–ª–∞ Titan Network!${CLR_RESET}"
    docker stop titan
    docker rm titan
    docker rmi nezha123/titan-edge
    rm -rf "$HOME/titan-network"
    echo -e "${CLR_SUCCESS}‚úÖ –£–∑–µ–ª —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω!${CLR_RESET}"
}

# –§—É–Ω–∫—Ü–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –º–µ–Ω—é –¥–µ–π—Å—Ç–≤–∏–π –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
function show_menu() {
    show_logo
    echo -e "${CLR_WARNING}üìå –í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ:${CLR_RESET}"
    echo -e "${CLR_INFO}1) üöÄ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–æ–¥—É${CLR_RESET}"
    echo -e "${CLR_INFO}2) üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –Ω–æ–¥—É${CLR_RESET}"
    echo -e "${CLR_INFO}3) üîÑ –û–±–Ω–æ–≤–∏—Ç—å –Ω–æ–¥—É${CLR_RESET}"
    echo -e "${CLR_INFO}4) üìú –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ª–æ–≥–∏${CLR_RESET}"
    echo -e "${CLR_INFO}5) üóëÔ∏è  –£–¥–∞–ª–∏—Ç—å –Ω–æ–¥—É${CLR_RESET}"
    echo -e "${CLR_INFO}6) ‚ùå –í—ã–π—Ç–∏${CLR_RESET}"
    read -p "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –¥–µ–π—Å—Ç–≤–∏—è: " choice
    
    case $choice in
        1) install_dependencies; install_node ;;
        2) restart_node ;;
        3) update_node ;;
        4) view_logs ;;
        5) remove_node ;;
        6) exit 0 ;;
        *) echo -e "${CLR_ERROR}‚ùå –û—à–∏–±–∫–∞: –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤—ã–±–æ—Ä! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.${CLR_RESET}" ;;
    esac
}

# –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞
show_menu
