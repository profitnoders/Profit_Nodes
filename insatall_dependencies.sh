#!/bin/bash

# =============================
# üìå –£–ù–ò–í–ï–†–°–ê–õ–¨–ù–´–ô –°–ö–†–ò–ü–¢ –£–°–¢–ê–ù–û–í–ö–ò –ó–ê–í–ò–°–ò–ú–û–°–¢–ï–ô
# üíª –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–æ–¥ (Ubuntu 20+)
# =============================

# –¶–≤–µ—Ç–æ–≤—ã–µ –∫–æ–¥—ã –¥–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞
GREEN='\033[1;32m'
YELLOW='\033[1;33m'
CYAN='\033[1;36m'
RED='\033[1;31m'
NC='\033[0m' # –°–±—Ä–æ—Å —Ü–≤–µ—Ç–∞

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ª–æ–≥–æ—Ç–∏–ø–∞ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞
function show_logo() {
    echo -e "${GREEN}============================================${NC}"
    echo -e "${CYAN} –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Å–∫—Ä–∏–ø—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞ Profit Nodes ${NC}"
    echo -e "${GREEN}============================================${NC}"
    curl -s https://raw.githubusercontent.com/profitnoders/Profit_Nodes/refs/heads/main/logo_new.sh | bash
}

# –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –ø–æ–∫–∞–∑–∞ –ª–æ–≥–æ—Ç–∏–ø–∞ –ø–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º —É—Å—Ç–∞–Ω–æ–≤–∫–∏
show_logo

echo -e "${CYAN}üöÄ –ù–∞—á–∏–Ω–∞–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É –≤—Å–µ—Ö –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...${NC}"

# 1Ô∏è‚É£ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–∞–∑–æ–≤—ã—Ö –ø–∞–∫–µ—Ç–æ–≤
echo -e "${YELLOW}üîÑ –û–±–Ω–æ–≤–ª—è–µ–º —Å–∏—Å—Ç–µ–º—É –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ —É—Ç–∏–ª–∏—Ç—ã...${NC}"
sudo apt update -y && sudo apt upgrade -y
sudo apt install -y software-properties-common curl wget git build-essential apt-transport-https ca-certificates gnupg lsb-release unzip

# 2Ô∏è‚É£ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker –∏ Docker Compose
echo -e "${YELLOW}üê≥ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Docker –∏ Docker Compose...${NC}"
sudo apt remove -y docker docker-engine docker.io containerd runc
sudo apt update -y
sudo apt install -y docker.io
sudo systemctl enable --now docker
sudo usermod -aG docker $USER
sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
sudo chmod +x /usr/local/bin/docker-compose

# 3Ô∏è‚É£ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Python 3, pip –∏ virtualenv
echo -e "${YELLOW}üêç –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Python 3, pip –∏ virtualenv...${NC}"
sudo apt install -y python3 python3-pip python3-venv
pip3 install --upgrade pip setuptools wheel requests aiohttp faker

# 4Ô∏è‚É£ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Golang (Go)
echo -e "${YELLOW}ü¶Ä –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Go (Golang)...${NC}"
sudo rm -rf /usr/local/go
wget https://go.dev/dl/go1.21.4.linux-amd64.tar.gz
sudo tar -C /usr/local -xzf go1.21.4.linux-amd64.tar.gz
rm go1.21.4.linux-amd64.tar.gz
echo "export PATH=\$PATH:/usr/local/go/bin" >> $HOME/.bashrc
source $HOME/.bashrc

# 5Ô∏è‚É£ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Node.js, npm, Yarn –∏ PM2
echo -e "${YELLOW}üü¢ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Node.js (LTS), npm –∏ Yarn...${NC}"
curl -fsSL https://deb.nodesource.com/setup_lts.x | sudo -E bash -
sudo apt install -y nodejs
npm install -g pm2 yarn

# 6Ô∏è‚É£ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Rust –∏ Cargo
echo -e "${YELLOW}ü¶Ä –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Rust –∏ Cargo...${NC}"
curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
source $HOME/.cargo/env

# 7Ô∏è‚É£ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Git, jq, make, tmux, screen
echo -e "${YELLOW}üõ† –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Git, jq, make, tmux –∏ screen...${NC}"
sudo apt install -y git jq make tmux screen

# 8Ô∏è‚É£ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ç–µ–≤—ã—Ö —É—Ç–∏–ª–∏—Ç
echo -e "${YELLOW}üåê –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —É—Ç–∏–ª–∏—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Å–µ—Ç—å—é...${NC}"
sudo apt install -y net-tools dnsutils iputils-ping traceroute nmap ufw iptables

# 9Ô∏è‚É£ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
echo -e "${YELLOW}üìä –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —É—Ç–∏–ª–∏—Ç—ã –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Ä–µ—Å—É—Ä—Å–æ–≤...${NC}"
sudo apt install -y htop iotop iftop sysstat glances ncdu

# üîü –£—Å—Ç–∞–Ω–æ–≤–∫–∞ PostgreSQL (–Ω—É–∂–µ–Ω –¥–ª—è –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö –Ω–æ–¥)
echo -e "${YELLOW}üêò –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º PostgreSQL...${NC}"
sudo apt install -y postgresql postgresql-contrib

# 1Ô∏è‚É£1Ô∏è‚É£ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö: LevelDB, RocksDB, SQLite
echo -e "${YELLOW}üíæ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–∞–∑–∞–º–∏ –¥–∞–Ω–Ω—ã—Ö...${NC}"
sudo apt install -y libleveldb-dev librocksdb-dev sqlite3 libsqlite3-dev

# 1Ô∏è‚É£2Ô∏è‚É£ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Bazel (–¥–ª—è –∫–æ–º–ø–∏–ª—è—Ü–∏–∏ –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö –Ω–æ–¥)
echo -e "${YELLOW}üõ† –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Bazel...${NC}"
sudo apt install -y apt-transport-https curl gnupg
curl -fsSL https://bazel.build/bazel-release.pub.gpg | gpg --dearmor > bazel-archive-keyring.gpg
sudo mv bazel-archive-keyring.gpg /usr/share/keyrings/
echo "deb [signed-by=/usr/share/keyrings/bazel-archive-keyring.gpg] https://storage.googleapis.com/bazel-apt stable jdk1.8" | sudo tee /etc/apt/sources.list.d/bazel.list
sudo apt update -y && sudo apt install -y bazel

# 1Ô∏è‚É£3Ô∏è‚É£ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –±–∏–±–ª–∏–æ—Ç–µ–∫ –∏ —É—Ç–∏–ª–∏—Ç
echo -e "${YELLOW}üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –¥–ª—è –Ω–æ–¥...${NC}"
sudo apt install -y clang libssl-dev llvm libudev-dev cmake protobuf-compiler

# 1Ô∏è‚É£4Ô∏è‚É£ –û—á–∏—Å—Ç–∫–∞ –∫–µ—à–∞ –ø–æ—Å–ª–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
echo -e "${YELLOW}üßπ –û—á–∏—Å—Ç–∫–∞ —Å–∏—Å—Ç–µ–º—ã –æ—Ç –Ω–µ–Ω—É–∂–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤...${NC}"
sudo apt autoremove -y && sudo apt clean

# ‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
echo -e "${GREEN}üéâ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –∑–∞–≤–µ—Ä—à–µ–Ω–∞!${NC}"
echo -e "${CYAN}üîÑ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä –ø–µ—Ä–µ–¥ —É—Å—Ç–∞–Ω–æ–≤–∫–æ–π –Ω–æ–¥—ã: sudo reboot${NC}"
