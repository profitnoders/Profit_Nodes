#!/bin/bash

# –¶–≤–µ—Ç–∞
CLR_INFO='\033[1;97;44m'
CLR_SUCCESS='\033[1;30;42m'
CLR_WARNING='\033[1;37;41m'
CLR_ERROR='\033[1;31;40m'
CLR_RESET='\033[0m'
CLR_GREEN='\033[0;32m'

# –§—É–Ω–∫—Ü–∏—è –ª–æ–≥–æ—Ç–∏–ø–∞
function show_logo() {
    echo -e "${CLR_INFO} –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Å–∫—Ä–∏–ø—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è InitVerse Mainnet ${CLR_RESET}"
    curl -s https://raw.githubusercontent.com/profitnoders/Profit_Nodes/refs/heads/main/logo_new.sh | bash
}

# –§—É–Ω–∫—Ü–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
function install_dependencies() {
    sudo apt update -y
    sudo apt upgrade -y
    sudo apt install -y wget curl
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–æ–¥—ã InitVerse
function install_node() {
    install_dependencies

    mkdir -p $HOME/initverse
    cd $HOME/initverse
    wget https://github.com/Project-InitVerse/ini-miner/releases/download/v1.0.0/iniminer-linux-x64
    chmod +x iniminer-linux-x64

    echo -e "${CLR_WARNING}–í–≤–µ–¥–∏—Ç–µ –∏–º—è –¥–ª—è –º–∞–π–Ω–µ—Ä–∞:${CLR_RESET}"
    read MAINER_NAME
    echo -e "${CLR_WARNING}–í—Å—Ç–∞–≤—å—Ç–µ EVM-–∞–¥—Ä–µ—Å –∫–æ—à–µ–ª—å–∫–∞:${CLR_RESET}"
    read WALLET
    echo -e "${CLR_WARNING}–°–∫–æ–ª—å–∫–æ —è–¥–µ—Ä CPU –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å? (–æ—Ç 2 –¥–æ 8):${CLR_RESET}"
    read CPU_CORES

    if [[ $CPU_CORES -lt 2 || $CPU_CORES -gt 8 ]]; then
        echo -e "${CLR_ERROR}–û—à–∏–±–∫–∞: –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —è–¥–µ—Ä –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ—Ç 2 –¥–æ 8!${CLR_RESET}"
        exit 1
    fi

    # –í—ã–±–æ—Ä –ø—É–ª–∞
    select_pool

    # –ó–∞–ø–∏—Å—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –≤ .env
    echo "WALLET=$WALLET" > "$HOME/initverse/.env"
    echo "MAINER_NAME=$MAINER_NAME" >> "$HOME/initverse/.env"
    echo "CPU_CORES=$CPU_CORES" >> "$HOME/initverse/.env"
    echo "POOL_URL=$POOL_URL" >> "$HOME/initverse/.env"
    echo "POOL_PORT=$POOL_PORT" >> "$HOME/initverse/.env"

    # –ü–µ—Ä–µ—á–∏—Ç—ã–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
    source $HOME/initverse/.env

    # –°–æ–∑–¥–∞—ë–º systemd-—Å–µ—Ä–≤–∏—Å
    create_service

    # –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–∞
    sudo systemctl daemon-reload
    sudo systemctl enable initverse
    sudo systemctl restart initverse

    echo -e "${CLR_SUCCESS}–ù–æ–¥–∞ InitVerse —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –∏ –∑–∞–ø—É—â–µ–Ω–∞ –Ω–∞ –ø—É–ª–µ $POOL_URL:$POOL_PORT —Å $CPU_CORES —è–¥—Ä–∞–º–∏!${CLR_RESET}"
}

# –§—É–Ω–∫—Ü–∏—è –≤—ã–±–æ—Ä–∞ –ø—É–ª–∞
function select_pool() {
    echo -e "${CLR_WARNING}–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–ª –¥–ª—è –º–∞–π–Ω–∏–Ω–≥–∞:${CLR_RESET}"
    echo -e "${CLR_GREEN}1) Pool A (pool-a.yatespool.com:31588)${CLR_RESET}"
    echo -e "${CLR_GREEN}2) Pool B (pool-b.yatespool.com:32488)${CLR_RESET}"
    echo -e "${CLR_GREEN}3) Pool C (pool-c.yatespool.com:31189)${CLR_RESET}"

    read -p "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –ø—É–ª–∞ (1/2/3): " POOL_CHOICE

    case $POOL_CHOICE in
        1) POOL_URL="pool-a.yatespool.com"; POOL_PORT="31588";;
        2) POOL_URL="pool-b.yatespool.com"; POOL_PORT="32488";;
        3) POOL_URL="pool-c.yatespool.com"; POOL_PORT="31189";;
        *) echo -e "${CLR_ERROR}–û—à–∏–±–∫–∞: –Ω–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä –ø—É–ª–∞!${CLR_RESET}"; exit 1;;
    esac
}

# –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è systemd —Å–µ—Ä–≤–∏—Å–∞
function create_service() {
    source $HOME/initverse/.env

    # –§–æ—Ä–º–∏—Ä—É–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã –¥–ª—è CPU
    CPU_DEVICES=""
    for ((i=0; i<CPU_CORES; i++))
    do
      CPU_DEVICES+=" --cpu-devices $i"
    done

    # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –Ω–æ–≤—ã–π —Å–µ—Ä–≤–∏—Å
    sudo bash -c "cat <<EOT > /etc/systemd/system/initverse.service
[Unit]
Description=InitVerse Mainnet Miner Service
After=network.target

[Service]
User=$(whoami)
WorkingDirectory=$HOME/initverse
ExecStart=/bin/bash -c 'source $HOME/initverse/.env && $HOME/initverse/iniminer-linux-x64 --pool stratum+tcp://$WALLET.$MAINER_NAME@$POOL_URL:$POOL_PORT$CPU_DEVICES'
Restart=on-failure

[Install]
WantedBy=multi-user.target
EOT"
}

# –§—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –º–∞–π–Ω–µ—Ä–∞
function start_miner() {
    sudo systemctl start initverse
    echo -e "${CLR_SUCCESS}–ú–∞–π–Ω–µ—Ä –∑–∞–ø—É—â–µ–Ω!${CLR_RESET}"
}

# –§—É–Ω–∫—Ü–∏—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –º–∞–π–Ω–µ—Ä–∞
function stop_miner() {
    sudo systemctl stop initverse
    echo -e "${CLR_WARNING}–ú–∞–π–Ω–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.${CLR_RESET}"
}

# –§—É–Ω–∫—Ü–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —è–¥–µ—Ä
function change_cpu_cores() {
    echo -e "${CLR_WARNING}–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —è–¥–µ—Ä (–æ—Ç 2 –¥–æ 8):${CLR_RESET}"
    read NEW_CPU_CORES

    if [[ $NEW_CPU_CORES -lt 2 || $NEW_CPU_CORES -gt 8 ]]; then
        echo -e "${CLR_ERROR}–û—à–∏–±–∫–∞: –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —è–¥–µ—Ä –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ—Ç 2 –¥–æ 8!${CLR_RESET}"
        exit 1
    fi

    # –û–±–Ω–æ–≤–ª—è–µ–º —Ñ–∞–π–ª .env
    sed -i "s/^CPU_CORES=.*/CPU_CORES=$NEW_CPU_CORES/" $HOME/initverse/.env

    # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–∏—Å
    create_service
    sudo systemctl daemon-reload
    sudo systemctl restart initverse

    echo -e "${CLR_SUCCESS}–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —è–¥–µ—Ä –∏–∑–º–µ–Ω–µ–Ω–æ –Ω–∞ $NEW_CPU_CORES!${CLR_RESET}"
}

# –§—É–Ω–∫—Ü–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø—É–ª–∞
function change_pool() {
    echo -e "${CLR_WARNING}–í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–≤—ã–π –ø—É–ª:${CLR_RESET}"
    select_pool

    # –û–±–Ω–æ–≤–ª—è–µ–º .env —Å –Ω–æ–≤—ã–º –ø—É–ª–æ–º
    sed -i "s|^POOL_URL=.*|POOL_URL=$POOL_URL|" $HOME/initverse/.env
    sed -i "s|^POOL_PORT=.*|POOL_PORT=$POOL_PORT|" $HOME/initverse/.env

    # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–∏—Å
    create_service
    sudo systemctl daemon-reload
    sudo systemctl restart initverse

    echo -e "${CLR_SUCCESS}–ü—É–ª –∏–∑–º–µ–Ω—ë–Ω –Ω–∞ $POOL_URL:$POOL_PORT!${CLR_RESET}"
}

# –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤
function view_logs() {
    sudo journalctl -fu initverse.service
}

# –£–¥–∞–ª–µ–Ω–∏–µ –Ω–æ–¥—ã
function remove_node() {
    echo -e "${CLR_WARNING}–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –Ω–æ–¥—É? (y/n)${CLR_RESET}"
    read -r CONFIRMATION
    if [[ "$CONFIRMATION" == "y" ]]; then
        sudo systemctl stop initverse
        sudo systemctl disable initverse
        sudo rm /etc/systemd/system/initverse.service
        sudo systemctl daemon-reload
        rm -rf $HOME/initverse
        echo -e "${CLR_WARNING}–ù–æ–¥–∞ —É–¥–∞–ª–µ–Ω–∞.${CLR_RESET}"
    else
        echo -e "${CLR_SUCCESS}–û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞.${CLR_RESET}"
    fi
}

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
function show_menu() {
    show_logo
    echo -e "${CLR_GREEN}1) üöÄ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–æ–¥—É${CLR_RESET}"
    echo -e "${CLR_GREEN}2) ‚ñ∂ –ó–∞–ø—É—Å—Ç–∏—Ç—å –º–∞–π–Ω–µ—Ä${CLR_RESET}"
    echo -e "${CLR_GREEN}3) ‚èπ –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –º–∞–π–Ω–µ—Ä${CLR_RESET}"
    echo -e "${CLR_GREEN}4) üîÑ –ò–∑–º–µ–Ω–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —è–¥–µ—Ä${CLR_RESET}"
    echo -e "${CLR_GREEN}5) üåç –°–º–µ–Ω–∏—Ç—å –ø—É–ª${CLR_RESET}"
    echo -e "${CLR_GREEN}6) üìú –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤${CLR_RESET}"
    echo -e "${CLR_GREEN}7) üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –Ω–æ–¥—É${CLR_RESET}"
    echo -e "${CLR_GREEN}8) ‚ùå –í—ã–π—Ç–∏${CLR_RESET}"

    read -p "–í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–º–µ—Ä –¥–µ–π—Å—Ç–≤–∏—è: " choice

    case $choice in
        1) install_node ;;
        2) start_miner ;;
        3) stop_miner ;;
        4) change_cpu_cores ;;
        5) change_pool ;;
        6) view_logs ;;
        7) remove_node ;;
        8) exit 0 ;;
        *) echo -e "${CLR_WARNING}–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä.${CLR_RESET}" && show_menu ;;
    esac
}

show_menu




